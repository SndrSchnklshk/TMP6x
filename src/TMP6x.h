// (c) 2022 Sander Schinkelshoek
// This code is licensed under MIT license (see LICENSE.txt for details)
#include "math.h"

#ifndef TMP6X_h
#define TMP6X_h

#define TMP6x_ERROR -99

enum TMP6x_Voltages
{
    /// @brief 1.8V
    V18,
    /// @brief 3.3V
    V33,
    /// @brief 5.0V
    V50,
};

class TMP6x
{
protected:
    TMP6x_Voltages voltage = TMP6x_Voltages::V33;
    float voltageIn = 3.3f;
    float maxAdcVoltageGain = 0;
    int resistorBias = 0;
    int adcResolution = 12;
    int adcBits = 0;
    float voltageBiasBits = 0;
    float vBiasBits = 0;

    float temparture = 0;
    float resistance = 0;
    float tmp = 0;

    int x1 = 0; // the lower resistance value in the table
    int x2 = 0; // the higher resistance value in the table
    int y1 = 0; // the difference between the lower resistance value from the table from the actual resistance value
    int y2 = 0; // the difference between the higher resistance value from the table from the actual resistance value

    float calculateResistance(int adc);

public:
    TMP6x(TMP6x_Voltages voltage, int resistorBias, int adcResolution, float maxAdcVoltageGain)
    {
        switch (voltage)
        {
        case TMP6x_Voltages::V18:
            this->voltageIn = 1.8f;
            break;
        case TMP6x_Voltages::V33:
        default:
            this->voltageIn = 3.3f;
            break;
        case TMP6x_Voltages::V50:
            this->voltageIn = 5.0f;
            break;
        }
        this->resistorBias = resistorBias;
        this->adcResolution = adcResolution;

        this->adcBits = pow(2, adcResolution); // (2 ^ adcResolution);
        if (maxAdcVoltageGain > 0 && maxAdcVoltageGain != this->voltageIn)
            this->adcBits = (this->adcBits * this->voltageIn) / maxAdcVoltageGain;

        this->vBiasBits = this->voltageIn / (float)this->adcBits;
    }

    int GetMaxAdcBits()
    {
        return this->adcBits;
    }

    float LastCalculatedTemperature();
    float LastCalculatedResistance();
    float ToFahrentheit(float temperature);
};

class TMP61 : public TMP6x
{
private:
    int table_v18_tmp61_1deg[167][2] = {
        {-40, 6495},
        {-39, 6537},
        {-38, 6580},
        {-37, 6624},
        {-36, 6667},
        {-35, 6711},
        {-34, 6755},
        {-33, 6799},
        {-32, 6844},
        {-31, 6889},
        {-30, 6934},
        {-29, 6980},
        {-28, 7026},
        {-27, 7072},
        {-26, 7118},
        {-25, 7165},
        {-24, 7212},
        {-23, 7259},
        {-22, 7307},
        {-21, 7354},
        {-20, 7403},
        {-19, 7451},
        {-18, 7500},
        {-17, 7549},
        {-16, 7598},
        {-15, 7647},
        {-14, 7697},
        {-13, 7747},
        {-12, 7798},
        {-11, 7849},
        {-10, 7900},
        {-9, 7951},
        {-8, 8003},
        {-7, 8054},
        {-6, 8107},
        {-5, 8159},
        {-4, 8212},
        {-3, 8265},
        {-2, 8318},
        {-1, 8372},
        {0, 8426},
        {1, 8480},
        {2, 8535},
        {3, 8590},
        {4, 8645},
        {5, 8700},
        {6, 8756},
        {7, 8812},
        {8, 8868},
        {9, 8925},
        {10, 8982},
        {11, 9039},
        {12, 9097},
        {13, 9155},
        {14, 9213},
        {15, 9271},
        {16, 9330},
        {17, 9389},
        {18, 9448},
        {19, 9508},
        {20, 9568},
        {21, 9628},
        {22, 9689},
        {23, 9750},
        {24, 9811},
        {25, 9872},
        {26, 9934},
        {27, 9996},
        {28, 10059},
        {29, 10121},
        {30, 10184},
        {31, 10248},
        {32, 10311},
        {33, 10375},
        {34, 10440},
        {35, 10504},
        {36, 10569},
        {37, 10634},
        {38, 10700},
        {39, 10766},
        {40, 10832},
        {41, 10898},
        {42, 10965},
        {43, 11032},
        {44, 11100},
        {45, 11167},
        {46, 11235},
        {47, 11304},
        {48, 11373},
        {49, 11442},
        {50, 11511},
        {51, 11581},
        {52, 11651},
        {53, 11721},
        {54, 11791},
        {55, 11862},
        {56, 11934},
        {57, 12005},
        {58, 12077},
        {59, 12149},
        {60, 12222},
        {61, 12295},
        {62, 12368},
        {63, 12442},
        {64, 12516},
        {65, 12590},
        {66, 12664},
        {67, 12739},
        {68, 12815},
        {69, 12890},
        {70, 12966},
        {71, 13042},
        {72, 13119},
        {73, 13196},
        {74, 13273},
        {75, 13350},
        {76, 13428},
        {77, 13507},
        {78, 13585},
        {79, 13664},
        {80, 13743},
        {81, 13823},
        {82, 13903},
        {83, 13983},
        {84, 14064},
        {85, 14145},
        {86, 14226},
        {87, 14308},
        {88, 14390},
        {89, 14472},
        {90, 14555},
        {91, 14638},
        {92, 14721},
        {93, 14805},
        {94, 14889},
        {95, 14974},
        {96, 15059},
        {97, 15144},
        {98, 15229},
        {99, 15315},
        {100, 15401},
        {101, 15488},
        {102, 15575},
        {103, 15662},
        {104, 15750},
        {105, 15838},
        {106, 15926},
        {107, 16015},
        {108, 16104},
        {109, 16194},
        {110, 16283},
        {111, 16374},
        {112, 16464},
        {113, 16555},
        {114, 16646},
        {115, 16738},
        {116, 16830},
        {117, 16923},
        {118, 17015},
        {119, 17109},
        {120, 17202},
        {121, 17296},
        {122, 17390},
        {123, 17485},
        {124, 17580},
        {125, 17675}};

    int table_v33_tmp61_1deg[167][2] = {
        {-40, 6543},
        {-39, 6586},
        {-38, 6630},
        {-37, 6673},
        {-36, 6717},
        {-35, 6761},
        {-34, 6806},
        {-33, 6851},
        {-32, 6896},
        {-31, 6941},
        {-30, 6987},
        {-29, 7033},
        {-28, 7079},
        {-27, 7126},
        {-26, 7172},
        {-25, 7220},
        {-24, 7267},
        {-23, 7315},
        {-22, 7363},
        {-21, 7411},
        {-20, 7460},
        {-19, 7509},
        {-18, 7558},
        {-17, 7607},
        {-16, 7657},
        {-15, 7707},
        {-14, 7758},
        {-13, 7808},
        {-12, 7859},
        {-11, 7911},
        {-10, 7962},
        {-9, 8014},
        {-8, 8066},
        {-7, 8119},
        {-6, 8172},
        {-5, 8225},
        {-4, 8278},
        {-3, 8332},
        {-2, 8386},
        {-1, 8440},
        {0, 8495},
        {1, 8550},
        {2, 8605},
        {3, 8660},
        {4, 8716},
        {5, 8772},
        {6, 8829},
        {7, 8885},
        {8, 8942},
        {9, 9000},
        {10, 9057},
        {11, 9115},
        {12, 9174},
        {13, 9232},
        {14, 9291},
        {15, 9350},
        {16, 9410},
        {17, 9469},
        {18, 9529},
        {19, 9590},
        {20, 9651},
        {21, 9712},
        {22, 9773},
        {23, 9835},
        {24, 9897},
        {25, 9959},
        {26, 10021},
        {27, 10084},
        {28, 10147},
        {29, 10211},
        {30, 10275},
        {31, 10339},
        {32, 10403},
        {33, 10468},
        {34, 10533},
        {35, 10599},
        {36, 10664},
        {37, 10731},
        {38, 10797},
        {39, 10864},
        {40, 10931},
        {41, 10998},
        {42, 11066},
        {43, 11134},
        {44, 11202},
        {45, 11270},
        {46, 11339},
        {47, 11409},
        {48, 11478},
        {49, 11548},
        {50, 11618},
        {51, 11689},
        {52, 11760},
        {53, 11831},
        {54, 11903},
        {55, 11975},
        {56, 12047},
        {57, 12119},
        {58, 12192},
        {59, 12265},
        {60, 12339},
        {61, 12413},
        {62, 12487},
        {63, 12562},
        {64, 12637},
        {65, 12712},
        {66, 12787},
        {67, 12863},
        {68, 12940},
        {69, 13016},
        {70, 13093},
        {71, 13170},
        {72, 13248},
        {73, 13326},
        {74, 13404},
        {75, 13483},
        {76, 13562},
        {77, 13641},
        {78, 13721},
        {79, 13801},
        {80, 13881},
        {81, 13962},
        {82, 14043},
        {83, 14124},
        {84, 14206},
        {85, 14288},
        {86, 14371},
        {87, 14454},
        {88, 14537},
        {89, 14620},
        {90, 14704},
        {91, 14789},
        {92, 14873},
        {93, 14958},
        {94, 15043},
        {95, 15129},
        {96, 15215},
        {97, 15302},
        {98, 15389},
        {99, 15476},
        {100, 15563},
        {101, 15651},
        {102, 15739},
        {103, 15828},
        {104, 15917},
        {105, 16006},
        {106, 16096},
        {107, 16186},
        {108, 16277},
        {109, 16368},
        {110, 16459},
        {111, 16551},
        {112, 16643},
        {113, 16735},
        {114, 16828},
        {115, 16921},
        {116, 17014},
        {117, 17108},
        {118, 17203},
        {119, 17297},
        {120, 17392},
        {121, 17488},
        {122, 17584},
        {123, 17680},
        {124, 17777},
        {125, 17874}};

    int table_v50_tmp61_1deg[167][2] = {
        {-40, 6603},
        {-39, 6647},
        {-38, 6691},
        {-37, 6735},
        {-36, 6779},
        {-35, 6824},
        {-34, 6869},
        {-33, 6914},
        {-32, 6960},
        {-31, 7005},
        {-30, 7052},
        {-29, 7098},
        {-28, 7145},
        {-27, 7192},
        {-26, 7239},
        {-25, 7287},
        {-24, 7335},
        {-23, 7383},
        {-22, 7432},
        {-21, 7481},
        {-20, 7530},
        {-19, 7579},
        {-18, 7629},
        {-17, 7679},
        {-16, 7730},
        {-15, 7780},
        {-14, 7831},
        {-13, 7883},
        {-12, 7934},
        {-11, 7986},
        {-10, 8039},
        {-9, 8091},
        {-8, 8144},
        {-7, 8197},
        {-6, 8250},
        {-5, 8304},
        {-4, 8358},
        {-3, 8413},
        {-2, 8467},
        {-1, 8522},
        {0, 8578},
        {1, 8633},
        {2, 8689},
        {3, 8745},
        {4, 8802},
        {5, 8858},
        {6, 8916},
        {7, 8973},
        {8, 9031},
        {9, 9089},
        {10, 9147},
        {11, 9206},
        {12, 9265},
        {13, 9324},
        {14, 9384},
        {15, 9444},
        {16, 9504},
        {17, 9564},
        {18, 9625},
        {19, 9686},
        {20, 9748},
        {21, 9809},
        {22, 9872},
        {23, 9934},
        {24, 9997},
        {25, 10060},
        {26, 10123},
        {27, 10187},
        {28, 10251},
        {29, 10315},
        {30, 10380},
        {31, 10445},
        {32, 10510},
        {33, 10575},
        {34, 10641},
        {35, 10708},
        {36, 10774},
        {37, 10841},
        {38, 10908},
        {39, 10976},
        {40, 11044},
        {41, 11112},
        {42, 11180},
        {43, 11249},
        {44, 11318},
        {45, 11388},
        {46, 11457},
        {47, 11528},
        {48, 11598},
        {49, 11669},
        {50, 11740},
        {51, 11811},
        {52, 11883},
        {53, 11955},
        {54, 12028},
        {55, 12100},
        {56, 12174},
        {57, 12247},
        {58, 12321},
        {59, 12395},
        {60, 12469},
        {61, 12544},
        {62, 12619},
        {63, 12695},
        {64, 12771},
        {65, 12847},
        {66, 12923},
        {67, 13000},
        {68, 13077},
        {69, 13155},
        {70, 13233},
        {71, 13311},
        {72, 13390},
        {73, 13469},
        {74, 13548},
        {75, 13628},
        {76, 13708},
        {77, 13788},
        {78, 13869},
        {79, 13950},
        {80, 14031},
        {81, 14113},
        {82, 14195},
        {83, 14277},
        {84, 14360},
        {85, 14444},
        {86, 14527},
        {87, 14611},
        {88, 14695},
        {89, 14780},
        {90, 14865},
        {91, 14950},
        {92, 15036},
        {93, 15122},
        {94, 15209},
        {95, 15296},
        {96, 15383},
        {97, 15471},
        {98, 15559},
        {99, 15647},
        {100, 15736},
        {101, 15825},
        {102, 15914},
        {103, 16004},
        {104, 16095},
        {105, 16185},
        {106, 16276},
        {107, 16368},
        {108, 16460},
        {109, 16552},
        {110, 16644},
        {111, 16737},
        {112, 16831},
        {113, 16925},
        {114, 17019},
        {115, 17113},
        {116, 17208},
        {117, 17304},
        {118, 17399},
        {119, 17496},
        {120, 17592},
        {121, 17689},
        {122, 17786},
        {123, 17884},
        {124, 17982},
        {125, 18081}};

    int getRecord(int row, short col);

public:
    TMP61(TMP6x_Voltages voltage,
          int adcResolution)
        : TMP6x(voltage, 10000, adcResolution, 0)
    {
    }
    TMP61(TMP6x_Voltages voltage,
          int adcResolution,
          float maxAdcVoltageGain)
        : TMP6x(voltage, 10000, adcResolution, maxAdcVoltageGain)
    {
    }
    float GetInterpolatedTemperature(int adc);
    int GetTemperature(int adc);
};

#endif